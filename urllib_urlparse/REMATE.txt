urllib库中提供的parse模块，定义了处理URL的标准接口。例如实现URL各部分的抽取、合并以及链接转换。
urlparse()方法将其拆分成6个部分。解析时有特定的分隔符:
://前面就是scheme,代表协议；
第一个/符号前面是netloc，代表域名；
域名后面是path;即访问路径
分号；后面是params，代表参数；
问号?后面是查询条件query，一般用作GET类型的URL；
井号#后面是锚点，用于直接定位页面内部的下拉方式；
解析URL
urllib.parse.urlparse(urlstring,scheme='',allow_fragments=True)
#urlstring:待解析的URL
#scheme:如果URL没有包含scheme信息，可以通过制定scheme参数返回。
#allow_fragments:是否忽略fragment。默认是True，如果设置为False，fragment部分就会被忽略。

urllib.parse.urlsplit()
#这个方法与urlparse方法相似，但是它不再单独解析params这部分，只返回5个结果


拼接URL
urllib.parse.urlunparse([list])
#它接受的参数是一个可迭代对象，但是它的长度必须是6，否则会抛出数量不足或过多的问题。

urllib.parse.urlunsplit()
#这个方法与urlunparse()类似，唯一区别是要求长度必须是5.

urllib.parse.urljoin()
#不同于前两个方法，这个方法可以提供一个base_url(基础链接)作为第一参数，将新的连接作为第二参数，该方法会分析base_url的scheme、netloc和path这3个内容并对新链接缺失部分进行补充，最后返回结果。




